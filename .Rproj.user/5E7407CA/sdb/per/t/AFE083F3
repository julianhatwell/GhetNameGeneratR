{
    "contents" : "print.ghetName <- function (gN) {\n  gen <- ifelse(gN$gender == \"f\", \"girl's\"\n                , ifelse(gN$gender == \"m\", \"boy's\"\n                         , \"unisex\"))\n  output <- cat(\"Your name is:\", gN$name\n              ,\"\\n\\nThis is a\", gen, \"name\")\n  invisible(output)\n}\n\n\n\"[<-.ghetName\" <- function(gN, subscript, value) {\n  gN$phonList[subscript] <- value\n  gN$name <- paste0(gN$phonList, collapse = \"\")\n  print(gN)\n  return(gN)\n}\n\nincludePhon <- function(liked, out) {\n  if (length(liked) != length(out)) {\n    stop(\"liked and out parameters must be same length\")\n  }\n  n <- length(out)\n    # check liked and out have same length\n  # use length as sample size\n  p <- rbeta(n, liked + 25, out + 25)\n  b <- as.logical(rbinom(n, 1, p))\n  return(b)\n}\n\ngenerateName <- function(phonLength = 3, gen = \"u\", randomness = 1) {\n  checkGenderAssignment(gen)\n  gender <- genderAssignment(gen)\n  numPhons <- ifelse(phonLength < 2, 2, phonLength - 2)\n  mPhons <- getMasterPhonemes()\n  firstPhons <- mPhons[mPhons$canBeFirst & includePhon(mPhons$likedFirst, mPhons$outFirst), \"phoneme\"]\n  if (gen == \"u\") lastPhons <- mPhons[(mPhons$maleEnding | mPhons$femaleEnding) & includePhon(mPhons$likedMale + mPhons$likedFemale, mPhons$outMale + mPhons$outFemale), \"phoneme\"]\n  if (gen == \"m\") lastPhons <- mPhons[mPhons$maleEnding & includePhon(mPhons$likedMale, mPhons$outMale), \"phoneme\"]\n  if (gen == \"f\") lastPhons <- mPhons[mPhons$femaleEnding & includePhon(mPhons$likedFemale, mPhons$outFemale), \"phoneme\"]\n  \n  first <- sample(firstPhons, 1)\n  currentOutFirst <- mPhons[mPhons$phoneme == first, \"outFirst\"]\n  mPhons[mPhons$phoneme == first, \"outFirst\"] <- currentOutFirst + 1\n  first <- paste0(toupper(substr(first, 1, 1)), substr(first, 2, nchar(first)))\n  middle <- mPhons[mPhons$canBeMid & includePhon(mPhons$likedMid, mPhons$outMid), \"phoneme\"]\n  phonList <- character(0)\n  mids <- character(0)\n  if (numPhons > 0) {\n    for (i in 1:numPhons) {\n      mid <- sample(middle, 1)\n      currentOutMid <- mPhons[mPhons$phoneme == mid, \"outMid\"]\n      mPhons[mPhons$phoneme == mid, \"outMid\"] <- currentOutMid + 1\n      mids <- paste0(mids, mid)\n      phonList <- c(phonList, mid)\n    }\n  }\n  last <- sample(lastPhons, 1)\n  currentOutMale <- mPhons[mPhons$phoneme == last, \"outMale\"]\n  currentOutfemale <- mPhons[mPhons$phoneme == last, \"outFemale\"]\n  newOutMale <- ifelse(gen %in% c(\"u\", \"m\"),  currentOutMale + 1, currentOutMale)\n  newOutFemale <- ifelse(gen %in% c(\"u\", \"f\"), currentOutfemale + 1, currentOutfemale)\n  mPhons[mPhons$phoneme == last, c(\"outMale\", \"outFemale\")] <- c(newOutMale, newOutFemale)\n  \n  gName <- list()\n  class(gName) <- \"ghetName\"\n  gName$name <- paste0(first, mids, last)\n  gName$phonList <- c(first, phonList, last)\n  gName$phonLength <- phonLength\n  gName$gender <- gen\n  gName$like <- as.logical(NA)\n  \n  # commit the ratings updates\n  commitPhons(mPhons)\n  \n  return(gName)\n}\n\nsaveName <- function(sN) {\n  if (is.na(sN$like)) sN$like <- FALSE\n  if (sN$like) {\n    mPhons <- getMasterPhonemes()\n    \n    currentLikedFirst <- mPhons[mPhons$phoneme == tolower(sN$phonList[1]), \"likedFirst\"]\n    mPhons[mPhons$phoneme == tolower(sN$phonList[1]), \"likedFirst\"] <- currentLikedFirst + 1\n    \n    currentLikedMale <- mPhons[mPhons$phoneme == tolower(sN$phonList[sN$phonLength]), \"likedMale\"]\n    currentLikedfemale <- mPhons[mPhons$phoneme == tolower(sN$phonList[sN$phonLength]), \"likedFemale\"]\n    newLikedMale <- ifelse(sN$gender %in% c(\"u\", \"m\"), currentLikedMale + 1, currentLikedMale)\n    newLikedFemale <- ifelse(sN$gender %in% c(\"u\", \"f\"), currentLikedfemale + 1, currentLikedfemale)\n    mPhons[mPhons$phoneme == sN$phonList[sN$phonLength], c(\"likedMale\", \"likedFemale\")] <- c(newLikedMale, newLikedFemale)\n    \n    if (sN$phonLength > 2) {\n      for (mid in sN$phonList[-c(1, sN$phonLength)]) {\n        currentLikedMid <- mPhons[mPhons$phoneme == mid, \"likedMid\"]\n        mPhons[mPhons$phoneme == mid, \"likedMid\"] <- currentLikedMid + 1\n      }\n    }\n    commitPhons(mPhons)\n  }\n}",
    "created" : 1449709095286.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2770207716",
    "id" : "AFE083F3",
    "lastKnownWriteTime" : 1449722436,
    "path" : "D:/github/GhetNameGeneratR/generateName.R",
    "project_path" : "generateName.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}